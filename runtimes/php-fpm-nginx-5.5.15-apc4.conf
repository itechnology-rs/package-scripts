name:      "php-fpm-nginx-5.5.15-apc4"
namespace: "/apcera/pkg/runtimes"
version:   "5.5.15-apc4"

# -apc4 for libpng 1.6.19 security update
# -apc1 for freetype-2.5.3 security update

# See ../Verification.md for release verification

# FPM notes:
#
#  * We stick with the default usercode of 'nobody'; there's no compelling
#    argument against it which still applies in a container environment with
#    dedicated container-per-instance and virtualised users.

sources [
  # As of PHP 5.3.3, FPM is included as part of the core
  { url: "https://apcera-sources.s3.amazonaws.com/php/php-5.5.15.tar.gz",
    sha256: "578febd686018401c4857699b29502b1aecaf82bf43525d810867f583961ac6e" },

  # libraries used for various PHP packages
  { url: "https://apcera-sources.s3.amazonaws.com/php/freetype-2.5.3.tar.bz2",
    sha256: "c0848b29d52ef3ca27ad92e08351f023c5e24ce8cea7d8fe69fc96358e65f75e" },
  { url: "https://apcera-sources.s3.amazonaws.com/php/jpegsrc.v9a.tar.gz",
    sha256: "3a753ea48d917945dd54a2d97de388aa06ca2eb1066cbfdc6652036349fe05a7" },
  { url: "https://apcera-sources.s3.amazonaws.com/php/libpng-1.6.19.tar.gz",
    sha256: "9f977ac8e4e3d4d5b001b32243f111eeec21bb6b59e583f2fb41fd2e48840352" },
]

build_depends [ { package: "build-essential" } ]
depends       [ { os: "ubuntu" },
                { package: "nginx" } ]
provides      [ { runtime: "php-fpm-nginx" },
                { runtime: "php-fpm-nginx-5" },
                { runtime: "php-fpm-nginx-5.5" },
                { runtime: "php-fpm-nginx-5.5.15" },
                { runtime: "php" },
                { runtime: "php-5" },
                { runtime: "php-5.5" },
                { runtime: "php-5.5.15" } ]

# FIXME(phil): we don't currently support 'conflicts'; when we do, this package
# should conflict with the regular php one, since I've chosen to minimise
# runtime differences in php install location, increasing the odds that
# client-code can be cleanly toggled between the two PHP providers (since it's
# unlikely to be common that scripts correctly use $PHP_*_PATH variables).

environment { "PATH":          "/opt/apcera/php-5.5.15/bin:$PATH",
              "PHP_BASE_PATH": "/opt/apcera/php-5.5.15",
              "PHP_EXT_PATH":  "/opt/apcera/php-5.5.15/ext" }

# NB: keep the non-Apache/apxs build steps synced between this package
#     and the equivalent Apache-based php, so that the same facilities
#     are available in both.
build (
      export BUILDPATH=`pwd`
      export INSTALLPATH=/opt/apcera/php-5.5.15
      export PATH="${INSTALLPATH:?}/bin:$PATH"

      tar xzvf jpegsrc.v9a.tar.gz
      (
        cd jpeg-9a
        ./configure --prefix=${INSTALLPATH}
        make
        sudo make install
      )

      tar xzvf libpng-1.6.19.tar.gz
      (
        cd libpng-1.6.19
        ./configure --prefix=${INSTALLPATH}
        make
        sudo make install
      )

      tar xjvf freetype-2.5.3.tar.bz2
      (
        cd freetype-2.5.3
        ./configure --prefix=${INSTALLPATH}
        make
        sudo make install
      )

      # fix up for PHP configure
      (
        cd ${INSTALLPATH:?}/include/freetype2
        sudo ln -s . freetype
      )

      tar xzvf php-5.5.15.tar.gz
      (
        cd php-5.5.15
        ./configure \
          --prefix=${INSTALLPATH:?} \
          --enable-fpm \
          --with-mysql \
          --with-pdo-mysql \
          --with-pgsql \
          --with-pdo-pgsql \
          --with-bz2 \
          --with-curl \
          --with-gd \
          --with-gettext \
          --with-iconv \
          --with-mhash \
          --with-openssl \
          --with-pcre-regex \
          --with-pear \
          --with-xmlrpc \
          --with-zend-vm \
          --with-zlib \
          --enable-bcmath \
          --enable-calendar \
          --enable-dba \
          --enable-exif \
          --enable-gd-native-ttf \
          --enable-mbstring \
          --enable-shmop \
          --enable-soap \
          --enable-sockets \
          --enable-sysvmsg \
          --enable-zip \
          --enable-opcache \
          --with-jpeg-dir=${INSTALLPATH:?} \
          --with-png-dir=${INSTALLPATH:?} \
          --with-freetype-dir=${INSTALLPATH:?} \
          --with-config-file-path=/app/conf
        make
        sudo make install

        sudo mkdir ${INSTALLPATH:?}/conf ${INSTALLPATH:?}/init.d
        sudo cp php.ini-production ${INSTALLPATH:?}/conf/php.ini
        sudo cp sapi/fpm/php-fpm.conf ${INSTALLPATH:?}/conf/php-fpm.conf
        sudo cp sapi/fpm/init.d.php-fpm ${INSTALLPATH:?}/init.d/php-fpm

        cd ${INSTALLPATH:?}/conf

        # Add extensions dir.
        sudo bash -c "echo 'extension_dir=/opt/apcera/php-5.5.15/lib/php/extensions/no-debug-non-zts-20121212' >> php.ini"

        # Update max file upload size to 32MB
        sudo sed -i 's/upload_max_filesize = .*/upload_max_filesize = 32M/' php.ini

        # Enable opcache.
        sudo sed -i 's/;opcache.enable=0/opcache.enable=1/' php.ini
        sudo sed -i 's/;opcache.enable_cli=0/opcache.enable_cli=1/' php.ini

        sudo bash -c "echo 'zend_extension=/opt/apcera/php-5.5.15/lib/php/extensions/no-debug-non-zts-20121212/opcache.so' >> php.ini"

        sudo ${INSTALLPATH:?}/bin/pecl install memcache
        sudo bash -c "echo 'extension=memcache.so' >> php.ini"

        sudo ${INSTALLPATH:?}/bin/pecl install uploadprogress
        sudo bash -c "echo 'extension=uploadprogress.so' >> php.ini"
      )
)
